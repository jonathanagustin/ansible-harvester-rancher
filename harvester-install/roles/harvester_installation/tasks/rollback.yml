---
# Rollback tasks for failed Harvester installation
# This playbook performs a comprehensive rollback of a failed Harvester installation
# on Dell servers managed via iDRAC. It aims to return the server to its pre-installation state.

# Step 0: Pre-rollback checks
- name: Perform pre-rollback checks
  block:
    - name: Check iDRAC connectivity
      dellemc.openmanage.idrac_info:
        idrac_ip: "{{ inventory_hostname }}"
        idrac_user: "{{ idrac_creds.username }}"
        idrac_password: "{{ idrac_creds.password }}"
      register: idrac_check
      failed_when: idrac_check.failed
      retries: 3
      delay: 10

    - name: Verify rollback is necessary
      ansible.builtin.assert:
        that: not installation_completed | default(false)
        msg: "Rollback not necessary. Installation was marked as completed."

  rescue:
    - name: Log pre-rollback check failure
      ansible.builtin.debug:
        msg: "Pre-rollback checks failed. Manual intervention may be required."
      failed_when: true

# Step 1: Reset BIOS to default settings
- name: Reset BIOS to default settings
  dellemc.openmanage.idrac_bios:
    idrac_ip: "{{ inventory_hostname }}"
    idrac_user: "{{ idrac_creds.username }}"
    idrac_password: "{{ idrac_creds.password }}"
    attributes:
      BootMode: "{{ original_boot_mode | default('Bios') }}"
      BootSeqRetry: "Disabled"
      FirstBootDevice: "{{ original_first_boot_device | default('HardDisk') }}"
  register: bios_reset_result
  retries: 3
  delay: 30
  until: bios_reset_result is success
  # Note: This uses original BIOS settings if they were captured before installation

# Step 2: Clear iDRAC job queue
- name: Clear iDRAC job queue
  dellemc.openmanage.idrac_job_queue:
    idrac_ip: "{{ inventory_hostname }}"
    idrac_user: "{{ idrac_creds.username }}"
    idrac_password: "{{ idrac_creds.password }}"
    state: "clear"
  register: job_queue_clear_result
  retries: 3
  delay: 30
  until: job_queue_clear_result is success

# Step 3: Power off server
- name: Power off server
  dellemc.openmanage.idrac_power:
    idrac_ip: "{{ inventory_hostname }}"
    idrac_user: "{{ idrac_creds.username }}"
    idrac_password: "{{ idrac_creds.password }}"
    state: "off"
  register: power_off_result
  retries: 3
  delay: 30
  until: power_off_result is success

# Step 4: Remove PXE boot configuration
- name: Remove PXE boot configuration
  block:
    - name: Remove DHCP reservation
      community.general.dnsmasq_conf:
        name: "pxe-{{ inventory_hostname }}"
        state: absent
      delegate_to: "{{ dhcp_server }}"

    - name: Remove iPXE configuration file
      ansible.builtin.file:
        path: "{{ tftp_root }}/pxelinux.cfg/01-{{ hostvars[inventory_hostname]['ansible_default_ipv4']['macaddress'] | replace(':', '-') }}"
        state: absent
      delegate_to: "{{ tftp_server }}"

  rescue:
    - name: Log PXE removal failure
      ansible.builtin.debug:
        msg: "Failed to remove PXE configuration. Manual cleanup may be required."

# Step 5: Remove Harvester partitions and restore original storage configuration
- name: Manage storage configuration
  block:
    - name: Get current storage configuration
      dellemc.openmanage.idrac_storage_volume_info:
        idrac_ip: "{{ inventory_hostname }}"
        idrac_user: "{{ idrac_creds.username }}"
        idrac_password: "{{ idrac_creds.password }}"
      register: current_storage_info

    - name: Remove Harvester partitions
      dellemc.openmanage.idrac_storage_volume:
        idrac_ip: "{{ inventory_hostname }}"
        idrac_user: "{{ idrac_creds.username }}"
        idrac_password: "{{ idrac_creds.password }}"
        state: "absent"
        volumes:
          - controller: "{{ item.controller }}"
            operation: "remove"
            name: "{{ item.name }}"
      loop: "{{ current_storage_info.storage_volumes | selectattr('name', 'match', '^harvester_.*') | list }}"
      when: current_storage_info.storage_volumes | selectattr('name', 'match', '^harvester_.*') | list | length > 0

    - name: Restore original storage configuration
      dellemc.openmanage.idrac_storage_volume:
        idrac_ip: "{{ inventory_hostname }}"
        idrac_user: "{{ idrac_creds.username }}"
        idrac_password: "{{ idrac_creds.password }}"
        state: "present"
        volumes: "{{ original_storage_config }}"
      when: original_storage_config is defined

  rescue:
    - name: Log storage configuration failure
      ansible.builtin.debug:
        msg: "Failed to manage storage configuration. Manual intervention required."
      failed_when: true

# Step 6: Remove Harvester-related files
- name: Remove Harvester-related files
  block:
    - name: Identify Harvester-related files
      ansible.builtin.find:
        paths: "{{ item }}"
        patterns: "harvester*"
        recurse: yes
      loop:
        - "/boot"
        - "/var/lib"
      register: harvester_files

    - name: Remove identified Harvester files
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ harvester_files.files }}"

  rescue:
    - name: Log file removal failure
      ansible.builtin.debug:
        msg: "Failed to remove all Harvester-related files. Manual cleanup may be needed."

# Step 7: Reset iDRAC to default settings
- name: Reset iDRAC to default settings
  dellemc.openmanage.idrac_reset:
    idrac_ip: "{{ inventory_hostname }}"
    idrac_user: "{{ idrac_creds.username }}"
    idrac_password: "{{ idrac_creds.password }}"
    reset_type: "default"
  register: idrac_reset_result
  retries: 3
  delay: 30
  until: idrac_reset_result is success

# Step 8: Restore original network configuration
- name: Restore original network configuration
  dellemc.openmanage.idrac_network:
    idrac_ip: "{{ inventory_hostname }}"
    idrac_user: "{{ idrac_creds.username }}"
    idrac_password: "{{ idrac_creds.password }}"
    setup_idrac: "{{ original_network_config }}"
  when: original_network_config is defined

# Step 9: Log rollback completion
- name: Log rollback completion
  ansible.builtin.debug:
    msg: "Rollback completed for {{ inventory_hostname }} at {{ ansible_date_time.iso8601 }}"

# Step 10: Send detailed notification of failed installation and rollback
- name: Send notification of failed installation and rollback
  ansible.builtin.mail:
    to: "{{ admin_email }}"
    subject: "Harvester installation failed on {{ inventory_hostname }} - Rollback completed"
    body: |
      The Harvester installation on {{ inventory_hostname }} has failed and a rollback has been performed.

      Rollback actions taken:
      - Pre-rollback checks performed
      - BIOS reset to original or default settings
      - iDRAC job queue cleared
      - Server powered off
      - PXE boot configuration removed
      - Harvester partitions removed
      - Original storage configuration restored (if applicable)
      - Harvester-related files removed
      - iDRAC reset to default settings
      - Original network configuration restored (if applicable)

      Rollback completed at: {{ ansible_date_time.iso8601 }}

      Please check the system and logs for more information. Manual verification and additional cleanup may be necessary.

      Server Details:
      - Hostname: {{ inventory_hostname }}
      - Service Tag: {{ idrac_check.idrac_info.system_info.service_tag }}
      - Model: {{ idrac_check.idrac_info.system_info.model }}
      - iDRAC Version: {{ idrac_check.idrac_info.firmware_version }}

      For any questions or concerns, please contact the infrastructure team.
  delegate_to: localhost

# Step 11: Update inventory
- name: Update inventory
  ansible.builtin.add_host:
    name: "{{ inventory_hostname }}"
    groups: "rollback_completed"
    ansible_host: "{{ ansible_host }}"
  changed_when: true

# Step 12: Verify rollback
- name: Verify rollback
  block:
    - name: Check server power state
      dellemc.openmanage.idrac_power_state_info:
        idrac_ip: "{{ inventory_hostname }}"
        idrac_user: "{{ idrac_creds.username }}"
        idrac_password: "{{ idrac_creds.password }}"
      register: final_power_state

    - name: Verify BIOS settings
      dellemc.openmanage.idrac_bios:
        idrac_ip: "{{ inventory_hostname }}"
        idrac_user: "{{ idrac_creds.username }}"
        idrac_password: "{{ idrac_creds.password }}"
      register: final_bios_settings

    - name: Log verification results
      ansible.builtin.debug:
        msg: |
          Rollback verification results for {{ inventory_hostname }}:
          - Power State: {{ final_power_state.power_state }}
          - BIOS Mode: {{ final_bios_settings.current_bios_settings.BootMode }}
          - First Boot Device: {{ final_bios_settings.current_bios_settings.FirstBootDevice }}

  rescue:
    - name: Log verification failure
      ansible.builtin.debug:
        msg: "Failed to verify rollback state. Manual verification recommended."
      failed_when: true

- name: Notify monitoring system of rollback
  uri:
    url: "{{ monitoring_system_url }}/api/alert"
    method: POST
    body_format: json
    body:
      host: "{{ inventory_hostname }}"
      alert_type: "harvester_install_rollback"
      message: "Harvester installation rolled back on {{ inventory_hostname }}"
  delegate_to: localhost
# Note: Additional steps may be necessary depending on your specific environment and requirements.
# Consider adding tasks for:
# - Updating monitoring systems
# - Adjusting capacity planning tools
# - Updating documentation or CMDBs
# - Performing any site-specific cleanup or restoration tasks
