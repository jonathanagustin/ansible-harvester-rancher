# dnsmasq configuration for Harvester PXE boot
# This file is generated by Ansible. Manual changes will be overwritten.

# Don't function as a DNS server:
port=0

# Log lots of extra information about DHCP transactions.
log-dhcp

# Set the root directory for files available via FTP.
tftp-root={{ tftp_root }}

# The boot filename, Server name, Server Ip Address
dhcp-boot=undionly.kpxe

# Disable re-use of the DHCP servername and filename fields as extra
# option space. That's to avoid confusing some old or broken DHCP clients.
dhcp-no-override

# PXE menu
pxe-prompt="Press F8 for PXE Network boot.", 3

# Gateway
dhcp-option=3,{{ gateway }}

# DNS
dhcp-option=6,{{ dns_servers.split(',')[0] }}

# Broadcast
dhcp-option=28,{{ broadcast_address }}

# NTP
dhcp-option=42,{{ ntp_servers.split(',')[0] }}

# Default route
dhcp-option=121,{{ default_route }}

# TFTP server address
dhcp-option=66,{{ tftp_server }}

# Set the limit on DHCP leases, the default is 150
dhcp-lease-max={{ dhcp_lease_max | default(150) }}

# The DHCP server needs somewhere on disk to keep its lease database.
dhcp-leasefile={{ dhcp_leasefile | default('/var/lib/misc/dnsmasq.leases') }}

# IP range and lease time
dhcp-range={{ dhcp_range_start }},{{ dhcp_range_end }},{{ dhcp_lease_time | default('12h') }}

# Static IP assignments
{% for host in groups['idrac_hosts'] %}
dhcp-host={{ hostvars[host]['mac_address'] }},{{ hostvars[host]['ansible_host'] }}
{% endfor %}

# iPXE-specific options
dhcp-match=set:ipxe,175 # iPXE sends a 175 option.
dhcp-boot=tag:ipxe,http://{{ nginx_server }}/harvester-vmlinuz initrd=harvester-initrd harvester.install.automatic=true harvester.install.config_url=http://{{ nginx_server }}/harvester-config.yaml console=tty1

# UEFI options
dhcp-match=set:efi-x86_64,option:client-arch,7
dhcp-match=set:efi-x86_64,option:client-arch,9
dhcp-boot=tag:efi-x86_64,undionly.kpxe

# Enable dnsmasq's built-in TFTP server
enable-tftp

# Set the root directory for files available via TFTP.
tftp-root={{ tftp_root }}